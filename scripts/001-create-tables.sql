-- This script will be generated by Drizzle, but we'll create it manually for clarity

-- Users table (managed by BetterAuth)
CREATE TABLE IF NOT EXISTS "user" (
  "id" TEXT PRIMARY KEY,
  "name" TEXT NOT NULL,
  "username" TEXT NOT NULL UNIQUE,
  "email" TEXT,
  "emailVerified" BOOLEAN NOT NULL DEFAULT false,
  "image" TEXT,
  "createdAt" TIMESTAMP NOT NULL DEFAULT NOW(),
  "updatedAt" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Sessions table (managed by BetterAuth)
CREATE TABLE IF NOT EXISTS "session" (
  "id" TEXT PRIMARY KEY,
  "expiresAt" TIMESTAMP NOT NULL,
  "token" TEXT NOT NULL UNIQUE,
  "createdAt" TIMESTAMP NOT NULL DEFAULT NOW(),
  "updatedAt" TIMESTAMP NOT NULL DEFAULT NOW(),
  "ipAddress" TEXT,
  "userAgent" TEXT,
  "userId" TEXT NOT NULL REFERENCES "user"("id") ON DELETE CASCADE
);

-- Account table (managed by BetterAuth)
CREATE TABLE IF NOT EXISTS "account" (
  "id" TEXT PRIMARY KEY,
  "accountId" TEXT NOT NULL,
  "providerId" TEXT NOT NULL,
  "userId" TEXT NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
  "accessToken" TEXT,
  "refreshToken" TEXT,
  "idToken" TEXT,
  "accessTokenExpiresAt" TIMESTAMP,
  "refreshTokenExpiresAt" TIMESTAMP,
  "scope" TEXT,
  "password" TEXT,
  "createdAt" TIMESTAMP NOT NULL DEFAULT NOW(),
  "updatedAt" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Verification table (managed by BetterAuth)
CREATE TABLE IF NOT EXISTS "verification" (
  "id" TEXT PRIMARY KEY,
  "identifier" TEXT NOT NULL,
  "value" TEXT NOT NULL,
  "expiresAt" TIMESTAMP NOT NULL,
  "createdAt" TIMESTAMP DEFAULT NOW(),
  "updatedAt" TIMESTAMP DEFAULT NOW()
);

-- User roles table
CREATE TABLE IF NOT EXISTS "user_role" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "user_id" TEXT NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
  "role" TEXT NOT NULL,
  "created_at" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- MCQs table
CREATE TABLE IF NOT EXISTS "mcq" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "title" TEXT NOT NULL,
  "content" TEXT NOT NULL,
  "explanation" TEXT,
  "correct_answer" TEXT NOT NULL,
  "options" JSONB NOT NULL,
  "difficulty" TEXT,
  "topic" TEXT,
  "tags" JSONB DEFAULT '[]'::jsonb,
  "created_by" TEXT NOT NULL REFERENCES "user"("id"),
  "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
  "updated_at" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Simulations table
CREATE TABLE IF NOT EXISTS "simulation" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "title" TEXT NOT NULL,
  "content" TEXT NOT NULL,
  "solution" TEXT,
  "difficulty" TEXT,
  "topic" TEXT,
  "tags" JSONB DEFAULT '[]'::jsonb,
  "estimated_time" INTEGER,
  "created_by" TEXT NOT NULL REFERENCES "user"("id"),
  "created_at" TIMESTAMP NOT NULL DEFAULT NOW(),
  "updated_at" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- MCQ progress table
CREATE TABLE IF NOT EXISTS "mcq_progress" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "user_id" TEXT NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
  "mcq_id" UUID NOT NULL REFERENCES "mcq"("id") ON DELETE CASCADE,
  "selected_answer" TEXT,
  "is_correct" BOOLEAN,
  "attempted_at" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Simulation progress table
CREATE TABLE IF NOT EXISTS "simulation_progress" (
  "id" UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  "user_id" TEXT NOT NULL REFERENCES "user"("id") ON DELETE CASCADE,
  "simulation_id" UUID NOT NULL REFERENCES "simulation"("id") ON DELETE CASCADE,
  "completed" BOOLEAN DEFAULT false,
  "time_spent" INTEGER,
  "attempted_at" TIMESTAMP NOT NULL DEFAULT NOW()
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS "idx_user_role_user_id" ON "user_role"("user_id");
CREATE INDEX IF NOT EXISTS "idx_mcq_created_by" ON "mcq"("created_by");
CREATE INDEX IF NOT EXISTS "idx_simulation_created_by" ON "simulation"("created_by");
CREATE INDEX IF NOT EXISTS "idx_mcq_progress_user_id" ON "mcq_progress"("user_id");
CREATE INDEX IF NOT EXISTS "idx_mcq_progress_mcq_id" ON "mcq_progress"("mcq_id");
CREATE INDEX IF NOT EXISTS "idx_simulation_progress_user_id" ON "simulation_progress"("user_id");
CREATE INDEX IF NOT EXISTS "idx_simulation_progress_simulation_id" ON "simulation_progress"("simulation_id");
